name: Build and Push Docker Images

on:
  workflow_run:
    workflows: ["Infrastructure Deployment"]
    types:
      - completed
  workflow_dispatch:
  push:
    branches: [ dev, main ]
    paths:
      - '.github/workflows/**'

jobs:
  build-and-push:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && (github.event.workflow_run.head_branch == 'dev' || github.event.workflow_run.head_branch == 'main'))
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for changes in .github
        if: github.event_name == 'push'
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -q '^.github/workflows/'; then
            echo "Changes detected in .github/workflows"
          else
            echo "No changes in .github/workflows, skipping workflow."
            exit 0
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          # credenciales temporales
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push MySQL image
      - name: Build and push MySQL image
        env:
          ECR_REGISTRY: 396561719560.dkr.ecr.us-east-1.amazonaws.com/my-mysql-image
          ECR_REPOSITORY: my-mysql-image
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Docker/Dockerfile_mysql Docker
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Build and push Webapp image
      - name: Build and push Webapp image
        env:
          ECR_REGISTRY: 396561719560.dkr.ecr.us-east-1.amazonaws.com/my-webapp-image
          ECR_REPOSITORY: my-webapp-image
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Docker/Dockerfile Docker
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG